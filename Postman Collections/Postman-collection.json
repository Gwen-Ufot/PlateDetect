{
	"info": {
		"_postman_id": "b5c793c7-c464-43d2-a828-ab8abbd48963",
		"name": "PD_Mobile App",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "LOGIN",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"jwt\", jsonData.token);\r",
									"\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Status code should return 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status should show ok\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body response should contain Token keyword at every login\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(jsonData.token);\r",
									"});\r",
									"\r",
									"//confirm that token is not null\r",
									"\r",
									"\r",
									" pm.test(\"Assert that the actual devicetoken is the same as the myToken and not null\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"pm.environment.set(\"token\", jsonData.token);\r",
									"\r",
									" });\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "4790572f-8afb-4ce2-b928-f8cac551b5a3"
							}
						}
					],
					"id": "39497db1-f209-4d7b-8e18-741cbddeb283",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "device_id",
								"value": "1234"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"gufot@softalliance.com\",\r\n    \"pin\": \"1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/mobile/login"
					},
					"response": []
				},
				{
					"name": "Login With Invalid Credentials",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"jwt\", jsonData.token);\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"//status code\r",
									"pm.test(\"Status code should return 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//data\r",
									"pm.test(\"Validate that data response is equals null\", function () {\r",
									"    pm.expect(jsonData.data).to.eql(null);\r",
									"});\r",
									"\r",
									"\r",
									"//confirm that message is not null\r",
									"var msg = jsonData.message;\r",
									"\r",
									"pm.test(\"Assert that message is not null\", function () {\r",
									"    pm.expect(jsonData.message).to.eql(msg);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"id": "03f0de6d-7c6a-47c6-bf1f-30a425273f7b"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "ff724746-fefa-4b87-a712-7fb8d52027ab"
							}
						}
					],
					"id": "0b1e76f3-f722-4a4b-93d2-484059a4dfd3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "device_id",
								"value": "1234"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"gufot\",\r\n    \"pin\": \"123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/mobile/login"
					},
					"response": []
				},
				{
					"name": "Login Without Credentials",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"jwt\", jsonData.token);\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"//status code\r",
									"pm.test(\"Status code should return 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//data\r",
									"pm.test(\"Validate that data response is equals null\", function () {\r",
									"    pm.expect(jsonData.data).to.eql(null);\r",
									"});\r",
									"\r",
									"\r",
									"//confirm that message is not null\r",
									"var msg = jsonData.message;\r",
									"\r",
									"pm.test(\"Assert that message is not null\", function () {\r",
									"    pm.expect(jsonData.message).to.eql(msg);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"id": "47324805-974e-4434-88c6-213b7efb6af7"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "fbb84c9a-cc63-45aa-a3fa-4153bcf2844a"
							}
						}
					],
					"id": "c4ea1f7c-7576-4b35-b6a4-5a7e403f3b14",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "device_id",
								"value": "1234"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \" \",\r\n    \"pin\": \"1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/mobile/login"
					},
					"response": []
				}
			],
			"id": "6ae00bb3-7de2-4d8f-9e41-f5f7ba199105"
		},
		{
			"name": "CREATE BILL",
			"item": [
				{
					"name": "Create Bill",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// var jsonData = pm.response.json();\r",
									"// var successMsg = \"Bill created successfully\";\r",
									"\r",
									"// pm.test(\"Status code is 200\", function () {\r",
									"//     pm.response.to.have.status(200);\r",
									"// });\r",
									"\r",
									"// pm.test(\"There must be a success message when bill is created \", function () {\r",
									"//     var jsonData = pm.response.json();\r",
									"//     pm.expect(jsonData.message).to.eql(successMsg);\r",
									"// });\r",
									"\r",
									"// pm.test(\"Assert that the success response returns TRUE\", function () {\r",
									"//     var jsonData = pm.response.json();\r",
									"//     pm.expect(jsonData.success).to.eql(true);\r",
									"// });\r",
									"\r",
									"//    pm.test(\"Validate that the SUCCESS response does not return a null value\", function () {\r",
									"//     pm.expect(pm.response.text()).to.include(jsonData['success'].length!=0);\r",
									"// });\r",
									"\r",
									"// console.log(jsonData.success)\r",
									"\r",
									"\r",
									"// pm.environment.set(\"billNumbers\", jsonData.data.billNumber);\r",
									"\r",
									"//  console.log(pm.environment.get(\"billNumbers\"))\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "7543303e-5e71-4088-b2d9-82745098acf6"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var offence = Math.floor(Math.random() * 300);\r",
									"console.log(offence);\r",
									"pm.environment.set(\"offenceID\", offence);\r",
									"\r",
									"//for(var myRandom =''; myRandom.length <= 3;) myRandom = Math.floor(Math.random() * 100);\r",
									"//Math.floor(Math.random() * 11);  (\"phone_num\", p_number);"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "16271e38-3736-44fb-925f-75cca24d8a8e"
							}
						}
					],
					"id": "8c06f4d8-cea5-4954-ae95-ad40ddafed2a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "device_id",
								"value": "1234"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"numberPlate\": \"EKY759BM\",\n\t\"vin\": \" \", //222535\n\t\"offenceIds\": [{{offenceID}}],\n\t\"offenderName\": \"Tim Drake\",\n\t\"address\": \"10, Gotham Road\",\n\t\"phoneNumber\": \"08032942091\",\n\t\"capturedAt\": \"09-29-2021 12:00:00\", // format: MM-DD-YYY HH:mm:ss\n    \"coordinates\": \"1003,1023\",\n\t\"image\": \"\"\n}"
						},
						"url": "{{baseUrl}}/api/vehicles/bills"
					},
					"response": []
				}
			],
			"id": "eebb9c47-76cb-4446-ada7-6dc293500f4b"
		},
		{
			"name": "FETCH CAMERAS",
			"item": [
				{
					"name": "Fetch Cameras",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Message should show Data received successfully\", function () {\r",
									"    pm.expect(jsonData.message).to.eql(\"Data received successfully\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status should show success\", function () {\r",
									"    pm.expect(jsonData.status).to.eql(\"success\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "673be2b9-3586-406f-9c63-a28c50b5bb6b"
							}
						}
					],
					"id": "9da08776-53aa-4680-a49e-964e86855fbf",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"disabled": true
							}
						],
						"url": "{{baseUrl}}/api/mobile/cameras"
					},
					"response": []
				},
				{
					"name": "Fetch Cameras No Auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "e2985c0e-f7a6-4ca0-9abf-dcaba3f64fa9"
							}
						}
					],
					"id": "de47ea29-83a8-468f-a657-923ee5cc5ca3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": ""
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/api/mobile/cameras"
					},
					"response": []
				}
			],
			"id": "61f0d98b-66cd-4321-8db1-5e6d06b5e23f"
		},
		{
			"name": "SEARCH BILLS BY PLATENUM",
			"item": [
				{
					"name": "Search Bills By Plate Number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate that the success response returns TRUE\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.eql(true);\r",
									"});\r",
									"\r",
									" pm.test(\"Validate that the SUCCESS response does not return a null value\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(jsonData['success'].length!=0);\r",
									"});\r",
									" \r",
									" console.log(jsonData.success)\r",
									"\r",
									"let actualBill = pm.environment.get(\"billNumbers\");\r",
									"let length = jsonData.data.bills.length;\r",
									"\r",
									"for (let i = 0; i < length; i++) {\r",
									"    //console.log(jsonData.data.bills[i].billNumber + \"run one\")\r",
									"    if (actualBill === jsonData.data.bills[i].billNumber){\r",
									"      \r",
									"         pm.test(\"Match the response of the bills\", function () {\r",
									"            var jsonData = pm.response.json();\r",
									"            pm.expect(jsonData.data.bills[i].billNumber).to.eql(actualBill);\r",
									"        });\r",
									"\r",
									"        console.log(actualBill);\r",
									"        console.log(jsonData.data.bills[i].billNumber);\r",
									"       i = length+1;\r",
									"       \r",
									"       }   \r",
									"\r",
									"}\r",
									"\r",
									"        "
								],
								"type": "text/javascript",
								"packages": {},
								"id": "366c4004-867e-41b0-a8dd-94bbdb30b9e2"
							}
						}
					],
					"id": "2a1d88dd-a752-47ea-a34b-1095fd3558b7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJqb2xhd2FsZUBzb2Z0YWxsaWFuY2UuY29tIiwianRpIjoiMzJkYWQzZmUtNTE2Ni00MjFhLWE2MWEtZmNhMTI5NzZlZGE2IiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbmFtZWlkZW50aWZpZXIiOiI4NmJmOWNiNS04OWMyLTQ2YjktOWI3YS1mYmIzZmYzODBmZmYiLCJleHAiOjE1MjQyMzg3NjcsImlzcyI6Imh0dHA6Ly9zb2Z0YWxsaWFuY2UuY29tIiwiYXVkIjoiaHR0cDovL3NvZnRhbGxpYW5jZS5jb20ifQ.YtLcCAfOi_-eVRQfP_RvBx3ioEBz6fGhS_-REpAkW-s"
							},
							{
								"key": "device_id",
								"value": "83483"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/vehicles/bills?numberPlate=AGL575GW",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"vehicles",
								"bills"
							],
							"query": [
								{
									"key": "numberPlate",
									"value": "AGL575GW"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Bills with invalid  PlateNum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate that the success response returns TRUE\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.eql(false);\r",
									"});\r",
									"\r",
									"\r",
									"        "
								],
								"type": "text/javascript",
								"packages": {},
								"id": "1d5912fe-2495-44cb-9c66-3fa90d0032fd"
							}
						}
					],
					"id": "8a378e43-a56e-46de-a79c-08ac9954eee7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJqb2xhd2FsZUBzb2Z0YWxsaWFuY2UuY29tIiwianRpIjoiMzJkYWQzZmUtNTE2Ni00MjFhLWE2MWEtZmNhMTI5NzZlZGE2IiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbmFtZWlkZW50aWZpZXIiOiI4NmJmOWNiNS04OWMyLTQ2YjktOWI3YS1mYmIzZmYzODBmZmYiLCJleHAiOjE1MjQyMzg3NjcsImlzcyI6Imh0dHA6Ly9zb2Z0YWxsaWFuY2UuY29tIiwiYXVkIjoiaHR0cDovL3NvZnRhbGxpYW5jZS5jb20ifQ.YtLcCAfOi_-eVRQfP_RvBx3ioEBz6fGhS_-REpAkW-s"
							},
							{
								"key": "device_id",
								"value": "83483"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/vehicles/bills?numberPlate=ABC376Z@",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"vehicles",
								"bills"
							],
							"query": [
								{
									"key": "numberPlate",
									"value": "ABC376Z@"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Bills with numbers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate that the success response returns TRUE\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.eql(false);\r",
									"});\r",
									"\r",
									"\r",
									"        "
								],
								"type": "text/javascript",
								"packages": {},
								"id": "1984b1a6-4132-4e76-9c9a-095204df1894"
							}
						}
					],
					"id": "2b1b3bbb-2eb4-47d2-b29b-2ba69255d84b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJqb2xhd2FsZUBzb2Z0YWxsaWFuY2UuY29tIiwianRpIjoiMzJkYWQzZmUtNTE2Ni00MjFhLWE2MWEtZmNhMTI5NzZlZGE2IiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbmFtZWlkZW50aWZpZXIiOiI4NmJmOWNiNS04OWMyLTQ2YjktOWI3YS1mYmIzZmYzODBmZmYiLCJleHAiOjE1MjQyMzg3NjcsImlzcyI6Imh0dHA6Ly9zb2Z0YWxsaWFuY2UuY29tIiwiYXVkIjoiaHR0cDovL3NvZnRhbGxpYW5jZS5jb20ifQ.YtLcCAfOi_-eVRQfP_RvBx3ioEBz6fGhS_-REpAkW-s"
							},
							{
								"key": "device_id",
								"value": "83483"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/vehicles/bills?numberPlate=1234567",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"vehicles",
								"bills"
							],
							"query": [
								{
									"key": "numberPlate",
									"value": "1234567"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "b60f0211-ddcc-4c8f-8e0c-01f74d0cec8e"
		},
		{
			"name": "FETCH OFFENCES",
			"item": [
				{
					"name": "Fetch Offences",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate that the data response does not return null values\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(jsonData.data.length!=0);\r",
									"});\r",
									"\r",
									"console.log(\"res => \"+jsonData.data.length!=0);\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "10109390-a859-4774-91e0-60c235987191"
							}
						}
					],
					"id": "f18cfd83-8260-4dca-8749-597ff204d081",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "device_id",
								"value": "1234"
							}
						],
						"url": "{{baseUrl}}/api/vehicles/offences"
					},
					"response": []
				}
			],
			"id": "c3b4b336-4168-4ba7-835f-78941a927b4e"
		},
		{
			"name": "GET BANK ACCOUNT",
			"item": [
				{
					"name": "Get Bank Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate that the status response returns success \", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"success\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate that the status response is not null\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"success\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate that the message is not null\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Bank account retrieved successfully\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "75d5642b-f2f1-4107-8477-d454cb37a782"
							}
						}
					],
					"id": "d09245d5-f39c-4d9a-92af-1d9c7dacc5fb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "device_id",
								"value": "1234"
							}
						],
						"url": "{{baseUrl}}/api/mobile/bank-accounts"
					},
					"response": []
				}
			],
			"id": "0ce32f3b-ca33-4fba-a9c6-563d7be15396"
		},
		{
			"name": "FETCH DASHBOARD",
			"item": [
				{
					"name": "Fetch Dashboard",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate that the status response returns success \", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"success\");\r",
									"});\r",
									"\r",
									"var myStatus = \"success\"\r",
									"pm.test(\"Match and validate that the status reponse is not null\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(myStatus);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate that data values are not null\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data).to.eql(jsonData.data);\r",
									"});\r",
									"console.log(jsonData.data);"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "993a6d26-61f0-41bb-8048-60d264f7d2c7"
							}
						}
					],
					"id": "81fab523-6765-4a9a-b76b-dece7ec05805",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/api/mobile/dashboard"
					},
					"response": []
				}
			],
			"id": "8f6a7f3e-ab43-474b-8bcb-2988afba3ba4"
		},
		{
			"name": "CONFIRM ACCOUNT NUM",
			"item": [
				{
					"name": "Confirm Account Number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate that the status response returns SUCCESS\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"success\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Validate that the data response returns the account_number\", function () {\r",
									"  pm.expect(pm.response.text()).to.include(jsonData.data.account_number);\r",
									" })\r",
									"\r",
									" var myAccountNum = \"6030422180\";\r",
									" pm.test(\"Validate that the account number value is not null and is the same with the actual input \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.account_number).to.eql(myAccountNum);\r",
									"});\r",
									"\r",
									"console.log(jsonData.status)"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "c6f2e8ca-bb0f-4e3a-bd32-16e99ceadd0c"
							}
						}
					],
					"id": "e1ec9efb-dcd3-4abe-9b73-a9085d4e74e2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "device_id",
								"value": "1234"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/mobile/confirm-account?accountNumber=6030422180&bankCode=082",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"mobile",
								"confirm-account"
							],
							"query": [
								{
									"key": "accountNumber",
									"value": "6030422180"
								},
								{
									"key": "bankCode",
									"value": "082"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Confirm Account Num wihout A/C Num",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate that the status response returns ERROR\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"error\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate that the message response returns bank_code is required\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"bank_code is required\");\r",
									"});\r",
									"\r",
									"\r",
									" \r",
									"\r",
									"console.log(jsonData.status)"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "d202c0dc-ec08-43bf-9adc-a36f8f4e87c9"
							}
						}
					],
					"id": "8df5e5b5-3223-4586-b38c-9c0d0bb885c7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "device_id",
								"value": "1234"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/mobile/confirm-account?accountNumber=6030422180",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"mobile",
								"confirm-account"
							],
							"query": [
								{
									"key": "accountNumber",
									"value": "6030422180"
								},
								{
									"key": "bankCode",
									"value": "082",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Confirm Account Num wihout bankCode",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate that the status response returns ERROR\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"error\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate that the message response returns bank_code is required\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"bank_code is required\");\r",
									"});\r",
									"\r",
									"\r",
									" \r",
									"\r",
									"console.log(jsonData.status)"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "39b7b338-4867-461e-8ac0-092126404710"
							}
						}
					],
					"id": "940009a1-edd6-45dc-943e-bc46acd35c73",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "device_id",
								"value": "1234"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/mobile/confirm-account?accountNumber=6030422180",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"mobile",
								"confirm-account"
							],
							"query": [
								{
									"key": "accountNumber",
									"value": "6030422180"
								},
								{
									"key": "bankCode",
									"value": "082",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "96788bc8-490c-4565-99c0-66ca4f67bc47"
		},
		{
			"name": "WITHDRAW FROM WALLET",
			"item": [
				{
					"name": "Withdraw from Wallet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate that the status response returns success \", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"success\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate that the status response returns success \", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Withdrawal was successfully processd. You should receive your payment within the next 24hrs\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "a066b87e-d312-4159-ae0a-02958f8a0cbe"
							}
						}
					],
					"id": "2962c9be-652b-43d1-bd84-2fb4c7bf6f3c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "device_id",
								"value": "1234"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"amount\": 5,\r\n    \"bankAccountId\": 48\r\n    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/mobile/withdraw"
					},
					"response": []
				},
				{
					"name": "Withdraw from Wallet without bankID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate that the status response returns error \", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"error\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate that the message response \", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"You need to select an account to withdraw to\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "d16ca7fe-ba7a-4a63-9d69-d19ef3a4ffb2"
							}
						}
					],
					"id": "e633d366-09a7-4a56-ab1c-dff61f0c2583",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "device_id",
								"value": "1234"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"amount\": 5\r\n    //\"bankAccountId\": 48\r\n    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/mobile/withdraw"
					},
					"response": []
				},
				{
					"name": "Withdraw from Wallet without Amount",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate that the status response returns error \", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"error\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate that the message response \", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Amount is lower than the withdrawal threshold\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "2be9b65f-20b9-4b9e-9395-3109af9e8cb3"
							}
						}
					],
					"id": "dcc2c09e-8605-44f7-9df6-62354aa40394",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "device_id",
								"value": "1234"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    //\"amount\": 5,\r\n    \"bankAccountId\": 48\r\n    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/mobile/withdraw"
					},
					"response": []
				}
			],
			"id": "747fe20f-ffde-43a4-b08c-870a92d9fe5c"
		},
		{
			"name": "CREATE BANK",
			"item": [
				{
					"name": "Create Bank Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate that the status response returns Success\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"success\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate that a success message is returned\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Bank account saved successfully\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "f688eac8-65ea-4280-9532-d75af52b44e2"
							}
						}
					],
					"id": "36944f0f-e4b9-4351-9d35-4db21be8df2b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "device_id",
								"value": "1234"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"UFOT GWENDOLINE EMIYE\",\r\n    \"number\": \"6030422180\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/mobile/bank-account"
					},
					"response": []
				},
				{
					"name": "Create Bank Account (Existing)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate that the status response returns false/error\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"error\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate that an error message is returned\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"You have already added this account\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "cd9689cd-0bf3-43bf-a134-659529ac8e3d"
							}
						}
					],
					"id": "5e89c75f-a80d-45bd-aabe-b3477e0769d0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "device_id",
								"value": "1234"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"UFOT GWENDOLINE EMIYE\",\r\n    \"number\": \"6030422180\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/mobile/bank-account"
					},
					"response": []
				}
			],
			"id": "1d170d41-5253-4372-aa2c-31201c759a1b"
		},
		{
			"name": "FETCH SETTINGS",
			"item": [
				{
					"name": "Fetch Settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate that the status response returns a success\", function () {\r",
									"  pm.expect(pm.response.text()).to.include(jsonData.status);\r",
									" })\r",
									"\r",
									"\r",
									"pm.test(\"Validate that the data response list is not empty\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data).to.eql(jsonData.data);\r",
									"});\r",
									"\r",
									"var myStatus= \"success\";\r",
									"pm.test(\"Validate that the status is not null\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(myStatus);\r",
									"});\r",
									"\r",
									"console.log(jsonData.status)\r",
									"\r",
									"//jsonData['success'].length!=0\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "d12c5f53-1d2a-48ad-b0c6-468040e5d3a3"
							}
						}
					],
					"id": "348c01e4-9d50-4ee8-8a48-a93f6c9590eb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "device_id",
								"value": "1234"
							}
						],
						"url": "{{baseUrl}}/api/mobile/settings"
					},
					"response": []
				}
			],
			"id": "4b731629-88d0-4197-aeb7-d37193707e04"
		},
		{
			"name": "FETCH PAYMENTS",
			"item": [
				{
					"name": "Fetch Payments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate that the status response returns Success\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"success\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate that the data response does not return  null values\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(jsonData['data'].length!=0);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate that the status response does not return a null value\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(jsonData['status'].length!=0);\r",
									"});\r",
									"console.log(jsonData.status)\r",
									"console.log(jsonData.data);\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "6242f271-3dc2-4d5f-901f-176803a6be7b"
							}
						}
					],
					"id": "e0aa820e-cfca-41e6-a7d0-aa347a3dfc98",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "device_id",
								"value": "1234"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/mobile/payments?numberPlate=EPE987GF",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"mobile",
								"payments"
							],
							"query": [
								{
									"key": "userId",
									"value": "f5190e93-35ed-4019-a0eb-d9455bea3bfa",
									"disabled": true
								},
								{
									"key": "numberPlate",
									"value": "EPE987GF"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch Payments Without PlateNum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate that the status response returns error\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"error\");\r",
									"});\r",
									"\r",
									"\r",
									"var mydata = jsonData.data\r",
									"\r",
									"pm.test(\"Validate that the data response  returns  null\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data).to.eql(mydata);\r",
									"});\r",
									"console.log(jsonData.data);\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "709a15a4-7e84-4080-ae16-d387904980c5"
							}
						}
					],
					"id": "22a9ba35-2797-4ad8-9cd7-0a29d4ca0f0a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "device_id",
								"value": "1234"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/mobile/payments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"mobile",
								"payments"
							],
							"query": [
								{
									"key": "userId",
									"value": "f5190e93-35ed-4019-a0eb-d9455bea3bfa",
									"disabled": true
								},
								{
									"key": "numberPlate",
									"value": "EPE987GF",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch Payments-InvalidPlateNum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate that the status response returns error\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"error\");\r",
									"});\r",
									"\r",
									"\r",
									"var mydata = jsonData.data\r",
									"\r",
									"pm.test(\"Validate that the data response  returns  null\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data).to.eql(mydata);\r",
									"});\r",
									"console.log(jsonData.data);\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "a897c509-ade6-47d8-ae41-cf9993eb8ad5"
							}
						}
					],
					"id": "4aa43fcc-ada2-40b9-a90b-124a35ee32e9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "device_id",
								"value": "1234"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/mobile/payments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"mobile",
								"payments"
							],
							"query": [
								{
									"key": "userId",
									"value": "f5190e93-35ed-4019-a0eb-d9455bea3bfa",
									"disabled": true
								},
								{
									"key": "numberPlate",
									"value": "EPE987GF@",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "2b2ee90a-7611-48a7-8cce-0663f2a8c060"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				],
				"id": "6a643797-816b-412e-b74a-3daac7f63b22"
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				],
				"id": "eadfdcda-07ba-42d7-a9e1-d23358d8bc6f"
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": "",
			"type": "string"
		}
	]
}